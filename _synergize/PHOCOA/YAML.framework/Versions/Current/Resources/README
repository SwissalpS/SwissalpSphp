Syck cocoa 0.1

The YAML project should work in XCode without any alterations. It builds a statically linked framework to syck. The header files should explain everything. Currently syck is not used for output, due to encoding constraints, and a slightly quirky method is used. This might/should be replaced with something that works in a similar way to Apple's keyed archivers.

Included is Kyle Hammond's very good Base64 code to handle data in YAML. Currently Altivec is disabled in his code, if you want to enable it change the COMPILE_FOR_ALTIVEC define at the top of GSNSDataExtensions.m.

If you have any problems/queries contact will@thimbleby.net

------- NOTES BY ALAN ----------
To get this to work, I somehow build both the i386 and ppc versions of libsyck. I unfortunately didn't write this down, but I think what I did was build syck twice; once for ppc and once for i386, then included both libs in the XCode project. I either built it as a univeral and then used lipo to extract the pieces, or I ran the build process twice, once with each of the two architectures. The XCode project puts them both in the framework to make it fat. 

The syck project page is here:

http://rubyforge.org/projects/syck/

I did also manage to create a libsyck.a universal, but IIRC XCode couldn't link or compile cleanly against it, so I ended up having XCode create the fat framework from the 2 individual libs.

$ lipo -info ext/cocoa/build/Deployment/YAML.framework/YAML
Architectures in the fat file: ext/cocoa/build/Deployment/YAML.framework/YAML are: ppc i386
