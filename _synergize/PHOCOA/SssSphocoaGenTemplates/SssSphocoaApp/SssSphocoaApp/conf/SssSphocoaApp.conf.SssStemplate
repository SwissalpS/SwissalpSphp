<?php
/* vim: set expandtab tabstop=4 shiftwidth=4 syntax=php: */
/* * * *
 * * webapp.conf
 * *
 * * developed and tested on a mac w OS X 10.5.x
 * *
 * * basically taken from PHOCOA template and added some SwissalpS stuff
 * *
 * * for now no smarty, propel support -> targeting cli app
 * * @version 20100430_181752 (CC) Luke JZ aka SwissalpS
 * * * */
/**
 * Configuration file for the web application.
 *
 * Things in the config file include settings that CHANGE based on the deployment of the web application. This convention makes it easy to
 * configure the deployment by changing one file instead of having to edit code.
 *
 * We recommend having a webapp.conf.dev and a webapp.conf.production in your RCS, and simply changing the filename of the one you want to
 * use to webapp.conf on each machine.
 *
 * Configurable elements that don't change based on deployment are typically done via the WFWebApplication and its delegate.
 *
 * @package framework-base
 * @subpackage Config
 */

// added by SwissalpS 20100502_033958 plan to remove again altho smarty or horde set it anyway later on
if (!defined('DIR_SEP')) define('DIR_SEP', DIRECTORY_SEPARATOR);

/*
 * Absolute path to the base directory of the PHOCOA framework on the server. If using a PEAR-installed PHOCOA, this should be /path/to/pear/phocoa, otherwise /path/to/phocoa.
 */
define('FRAMEWORK_DIR', '##PATH_DIR_SRC_PHOCOA##');

/* added by SwissalpS 20100502_033958
 * Absolute path to the base directory of the SwissalpS framework on the server.
 * probably ends in /SssS or /SwissalpS
 */
define('SwissalpS_FRAMEWORK_DIR', '##PATH_DIR_SRC_SwissalpSphp##');

/* added by SwissalpS 20100502_033958
 * Absolute path to the base directory of the Smarty framework on the server.
 * probably ends in /Smarty/
 */
define('SMARTY_DIR', '##PATH_DIR_SRC_SMARTY####DIR_SEP##');

/* added by SwissalpS 20100502_033958
 * Absolute path to the base directory of the Propel framework on the server.
 * probably ends in /propel
 */
define('PROPEL_FRAMEWORK_DIR', '##PATH_DIR_SRC_PROPEL##');

/* added by SwissalpS 20100502_033958
 * Absolute path to the base directory of the Propel framework on the server.
 * probably ends in /pear
 */
define('PEAR_LOG_FRAMEWORK_DIR', '##PATH_DIR_SRC_PEAR_LOG##');

/* added by SwissalpS 20100505_231904
 * Absolute path to the base directory of the Horde framework on the server.
 * probably ends in /Horde
 */
define('HORDE_FRAMEWORK_DIR', '##PATH_DIR_SRC_HORDE##');

/* added by SwissalpS 20100509_150328
 * Absolute path to the super directory of base directory of the phing framework on the server.
 * PHING_PATH/phing.php and PHING_PATH/phing/
 */
define('PHING_PATH', '##PATH_DIR_SRC_PHING##');

/*
 * Absolute path to the log directory for use by the framework. Should be world-writable.
 */
define('LOG_DIR', '##PATH_DIR_PHOCOA_APP_CONTAINER####DIR_SEP##log');

/*
 * Absolute path to the runtime directory for use by the framework. Should be world-writable.
 */
define('RUNTIME_DIR', '##PATH_DIR_PHOCOA_APP_CONTAINER####DIR_SEP##runtime');

/*
 * Absolute path to the base directory of this web application.
 *
 * The directory where THIS application is based.
 */
define('APP_ROOT', '##PATH_DIR_PHOCOA_APP##');

/*
 * Relative URL path to the base directory of this application.
 * IMPORTANT: This needs to match up with your settings in either httpd.conf / AliasMatch or .htaccess / RewriteRule.
 * By default the url http://localhost/myModule will map to the module "myModule".
 * If you want to have it work like http://localhost/word/myModule then you should set WWW_ROOT to "word" and update httpd.conf or .htaccess to match.
 */
define('WWW_ROOT', '');

/*
 * Name of the WFWebApplication delegate. The application will not run witout one of these at it supplies the default skin and module.
 */
define('WEBAPP_DELEGATE', 'MyWebApplicationDelegate');

/* added by SwissalpS 20100502_033958
 * Name of the SssSCLIApplication delegate. For 'CLI' and 'both' app types may be same as WEBAPP_DELEGATE
 */
define('SssS_APP_DELEGATE', 'MyApplicationDelegate');

/*
 * Deployment status of the application on this machine. Toggling this activates different log settings, error handling, etc.
 *
 * You can also use it in your own code to switch between "test" and "live" interfaces for ecommerce, etc.
 */
define('IS_PRODUCTION', false);

/** SwissalpS 20100502_033958 changed to use SssS_IncludeThesePathsToPHPIncludePath to add some more paths
 * The applicaction needs the PHP include_path to include Smarty, the framework itself, and whichever other of your classes you want to be able to access easily.
 */
require(SwissalpS_FRAMEWORK_DIR . '##DIR_SEP##SssS_IncludeThesePathsToPHPIncludePath.inc');
if (null === //SssS_IncludeThesePathsToPHPIncludePath( // normal - checks duplicates
			// SssS_PrependThesePathsToPHPIncludePath( // fast - prepends without checking duplicates (calls SssS_IncludeThesePathsToPHPIncludePath(array, true)
			SssS_PrependThesePathsToPHPIncludePathAndRemove( // dev - prepends and removes duplicates (calls SssS_IncludeThesePathsToPHPIncludePath(array, false, true) then if second array is given, removes those from include path

	// prepend these
	array(
		  //SwissalpS_FRAMEWORK_DIR,
		  FRAMEWORK_DIR,
		  //PROPEL_FRAMEWORK_DIR,
		  //'##PATH_DIR_SRC_SMARTY##',
		  //PEAR_LOG_FRAMEWORK_DIR,
		  //APP_ROOT,
		  //APP_ROOT . '##DIR_SEP##classes',
		  //PHING_PATH
	),

	// remove these (optional)
	array('/Volumes/UNIXb/gitSwissalpS/phocoa/external/SwissalpS')

	)) trigger_error('Error including paths to include path', E_USER_NOTICE);

// old Propel 1.x config
define('PROPEL_CONF', null);
// new Propel 2.x config
define('PROPEL2_RUNTIME_CONFIG', APP_ROOT . '##DIR_SEP##conf##DIR_SEP##Propel2conf_##PHOCOA_PROJECT_NAME##.php');
define('PROPEL2_ACTIVATED', false);
define('ORM_MODEL_ADAPTER', 'Propel2'); // for scaffold

// we need to define a time-zone to avoid flooding with warnings
date_default_timezone_set('UTC');

/** SwissalpS 20100502_033958 modified this line to point to his modified bootstrap
 * ensuring that his classes get loaded and that his modified WFIncluding does the autoload
 * Call the bootstrap code so every script doesn't have to.
 */
require(SwissalpS_FRAMEWORK_DIR . '##DIR_SEP##_synergize##DIR_SEP##PHOCOA##DIR_SEP##SssSbootstrap.inc');
?>
