<?php
/* propel.php.dist
 *
 * configures Propel2 for maintenance jobs
 * add this file to git master repo
 * copy to propel.php and .gitignore that
 * Settings in propel.php override settings in propel.php.dist
 */

return [
	'propel' => [
		'general' => [
	      	// The name of your project.
			'project' => '##PHOCOA_PROJECT_NAME##',
			'version' => 2,
		],
		'exclude_tables' => [
			// you can use wildcard as you wish
			//"/name of table to ignore/"|string
		],
### Directories and Filenames ###
		'paths' => [
			// Directory where the project files (`schema.xml`, etc.) are located.
			// Default value is current path
			//projectDir:  {current_path}|string
			'projectDir' => '##PATH_DIR_PHOCOA_APP####DIR_SEP##propel-build',

			// The directory where Propel expects to find your `schema.xml` file.
			//schemaDir: {current_path}|string
			'schemaDir' => '##PATH_DIR_PHOCOA_APP####DIR_SEP##propel-build',

			// The directory where Propel should output classes, sql, config, etc.
			// Default value is current path #
			//outputDir: {current_path}|string
			// This does not seem to have any efect so commented by SwissalpS -> define on cli
			'outputDir' => '##PATH_DIR_PHOCOA_APP####DIR_SEP##propel-build',

			// The directory where Propel should output generated object model classes.
			//phpDir: {current-path/generated-classes}|string
			'phpDir' => '##PATH_DIR_PHOCOA_APP####DIR_SEP##classes',

			// The directory where Propel should output the compiled runtime configuration.
			//phpConfDir: {current-path/generated-conf}|string
			'phpConfDir' => '##PATH_DIR_PHOCOA_APP####DIR_SEP##conf',

			// The directory where Propel should output the generated DDL (or data insert statements, etc.)
			//sqlDir: {current-path/generated-sql}|string
			'sqlDir' => '##PATH_DIR_PHOCOA_APP####DIR_SEP##propel-build',

			// Directory in which your composer.json resides
			//composerDir: {empty}|string
			//'composerDir' => '##PATH_DIR_PHOCOA_APP##',
			//'composerDir' => '##PATH_DIR_PHOCOA_APP_CONTAINER##',
		],

## All Database settings ##
		'database' => [
			// All database sources
			'connections' => [##DB_CONNECTIONS_ARRAY##
			],

			## Specific adapter settings
			'adapters' => [
				## Mysql ##
				'mysql' => [
					# Default table type
					#tableType: {InnoDB}|MyIsam

					# Keyword used to specify the table engine in the CREATE SQL statement.
					# Defaults to 'ENGINE', users of MYSQL < 5 should use 'TYPE' instead.
					#tableEngineKeyword: {ENGINE}|TYPE
				],

				## Sqlite ##
				'sqlite' => [
					#foreignKey: {empty}|string
					#tableAlteringWorkaround: {empty}|boolean
				],

				## Oracle ##
				'oracle' => [
					#autoincrementSequencePattern: ${table}_SEQ
				],
			],
		],

		## Migration settings ##
		'migrations' => [
			# Whether to specify PHP names that are the same as the column names.
			#samePhpName: {false}|true

			# Whether to add the vendor info. It does provide additional information (such as full-text indexes) which can
			# affect the generation of the DDL from the schema.
			#addVendorInfo: {false}|true

			# The name of migrations table
			#tableName: {propel_migration}|string

			# The name of the parser class
			# If you leave this property blank, Propel looks for an appropriate parser class, based on platform: i.e.
			# if the platform is `MysqlPlatform` then parser is `\Propel\Generator\Reverse\MysqlSchemaParser`
			#parserClass: {empty}|string
		],

		## Reverse settings
		'reverse' => [
			# The connection to use to reverse the database
			'connection' => '##DB_CONNECTION_NAME_DEFAULT##',

			# Reverse parser class can be different from migration one
			# If you leave this property blank, Propel looks for an appropriate parser class, based on platform: i.e.
			# if the platform is `MysqlPlatform` then parser is `\Propel\Generator\Reverse\MysqlSchemaParser`
			#parserClass: {empty}|string
		],

		## Runtime settings ##
		'runtime' => [
			'defaultConnection' => '##DB_CONNECTION_NAME_DEFAULT##',
			# Datasources as defined in database.connections
			# This section affects config:convert command
			'connections' => [
				##DB_CONNECTIONS_NAMES##
			],

			## Log and loggers definitions ##
			# For `type` and `level` options see Monolog documentation https://github.com/Seldaek/monolog
			'log' => [
				'defaultLogger' => [
					#type: {empty}|string
					#path: {empty}|string
					'path' => '##PATH_DIR_LOG##',
					#level: {empty}|integer
					'level' => 100,
				],
			],

			## Profiler configuration ##
			# To enable the profiler for a connection, set the `classname` option to \Propel\Runtime\Connection\ProfilerConnectionWrapper
			# see: http://propelorm.org/documentation/07-logging.html
			'profiler' => [
				#classname: {\Propel\Runtime\Util\Profiler}|string
				'slowTreshold' => 0.1,
				'details' => [
					'time' => [
						#precision: {3}|integer
						#pad: {8}|integer
					],
					# caused error unknown option so commented by SwissalpS
					#memory:
						#precision: {3}|integer
						#pad: {8}|integer
					'memDelta' => [
						#precision: {3}|integer
						#pad: {8}|integer
					],
					'memPeak' => [
						#precision: {3}|integer
						#pad: {8}|integer
					],
				],
				#innerGlue: {":"}|integer
				#outerGlue: {"|"}|integer
			],
		],
		## Generator settings ##
		'generator' => [
			'defaultConnection' => '##DB_CONNECTION_NAME_DEFAULT##',
			# Datasources as defined in database.connections
			'connections' => [
				##DB_CONNECTIONS_NAMES##
			],

			# Add a prefix to all the table names in the database.
			# This does not affect the tables phpName.
			# This setting can be overridden on a per-database basis in the schema.
			#tablePrefix: {empty}|string

			# Platform class name
			#platformClass: {Propel\Generator\Platform\MysqlPlatform}|string

			# The package to use for the generated classes.
			# This affects the value of the @package phpdoc tag, and it also affects
			# the directory that the classes are placed in. By default this will be
			# the same as the project. Note that the target package (and thus the target
			# directory for generated classes) can be overridden in each `<database>` and
			# `<table>` element in the XML schema.
			#targetPackage: {empty}|string
			'targetPackage' => '##PHOCOA_PROJECT_NAME##',

			# Whether to join schemas using the same database name into a single schema.
			# This allows splitting schemas in packages, and referencing tables in another
			# schema (but in the same database) in a foreign key. Beware that database
			# behaviors will also be joined when this parameter is set to true.
			#packageObjectModel: {true}|false

			# If you use namespaces in your schemas, this setting tells Propel to use the
			# namespace attribute for the package. Consequently, the namespace attribute
			# will also stipulate the subdirectory in which model classes get generated.
			#namespaceAutoPackage: {true}|false

			'schema' => [
				# The schema base name
				#basename: {schema}|string
				# If your XML schema specifies SQL schemas for each table, you can copy the
				# value of the `schema` attribute to other attributes.
				# To copy the schema attribute to the package attribute, set this to true
				#autoPackage: {false}|true
				'autoPackage' => true,
				# To copy the schema attribute to the namespace attribute, set this to true
				#autoNamespace: {false}|true
				# To use the schema attribute as a prefix to all model phpNames, set this to true
				#autoPrefix: {false}|true

				# Whether to transform the XML schema using the XSL file.
				# This was used in previous Propel versions to clean up the schema, but tended
				# to hide problems in the schema. It is disabled by default since Propel 1.5.
				# The default XSL file is located under `resources/xsl/database.xsl`
				# and you can use a custom XSL file by changing the `propel.schema.xsl.file`
				# property.
				#transform: {false}|true
			],

			## Date/Time settings ##
			'dateTime' => [

				# Enable full use of the DateTime class.
				# Setting this to true means that getter methods for date/time/timestamp
				# columns will return a DateTime object when the default format is empty.
				#useDateTimeClass: {true}|false

				# Specify a custom DateTime subclass that you wish to have Propel use
				# for temporal values.
				#dateTimeClass: {DateTime}|string
				'dateTimeClass' => 'WFDateTime',

				# These are the default formats that will be used when fetching values from
				# temporal columns in Propel. You can always specify these when calling the
				# methods directly, but for methods like getByName() it is nice to change
				# the defaults.
				# To have these methods return DateTime objects instead, you should set these
				# to empty values
				#defaultTimeStampFormat: {Y-m-d H:i:s}
				'defaultTimeStampFormat' => '',
				#defaultTimeFormat: { %X }|string
				'defaultTimeFormat' => '',
				#defaultDateFormat: { %x }|string
				'defaultDateFormat' => '',
			],

			'objectModel' => [
				# Whether to add generic getter/setter methods.
				# Generic accessors are `getByName()`, `getByPosition(), ` and `toArray()`.
				#addGenericAccessors: {true}|false
				# Generic mutators are `setByName()`, `setByPosition()`, and `fromArray()`.
				#addGenericMutators: {true}|false
				#emulateForeignKeyConstraints: {false}|true
				#addClassLevelComment: {true}|false
				#defaultKeyType: {phpName}|string
				#addSaveMethod: {true}|false
				#namespaceMap: {Map}|string

				# Whether to add a timestamp to the phpdoc header of generated OM classes.
				# If you use a versioning system, don't set this to true, or the classes
				# will be committed too often with just a date change.
				#addTimeStamp: {false}|true

				# Whether to support pre- and post- hooks on `save()` and `delete()` methods.
				# Set to false if you never use these hooks for a small speed boost.
				#addHooks: {true}|false

				# Some sort of "namespacing": All Propel classes with get the Prefix
				# "My_ORM_Prefix_" just like "My_ORM_Prefix_BookTableMap".
				#classPrefix: {empty}|string
				# I'm not sure this is fully implemented yet
				#classPrefix: "some_Prefix_"

				# Identifier quoting may result in undesired behavior (especially in Postgres),
				# it can be disabled in DDL by setting this property to true.
				#disableIdentifierQuoting: {false}|true

				# Whether the generated `doSelectJoin*()` methods use LEFT JOIN or INNER JOIN
				# (see ticket:491 and ticket:588 to understand more about why this might be
				# important).
				#useLeftJoinsInDoJoinMethods: {true}|false

				# Pluralizer class (used to generate plural forms)
				# Use StandardEnglishPluralizer instead of DefaultEnglishPluralizer for better pluralization
				# (Handles uncountable and irregular nouns)
				'pluralizerClass' => '\Propel\Common\Pluralizer\StandardEnglishPluralizer',

				# Builder classes
				'builders' => [
					'object' => '\Propel\Generator\Builder\Om\ObjectBuilder',
					'objectstub' => '\Propel\Generator\Builder\Om\ExtensionObjectBuilder',
					'objectmultiextend' => '\Propel\Generator\Builder\Om\MultiExtendObjectBuilder',
					'tablemap' => '\Propel\Generator\Builder\Om\TableMapBuilder',
					'query' => '\Propel\Generator\Builder\Om\QueryBuilder',
					'querystub' => '\Propel\Generator\Builder\Om\ExtensionQueryBuilder',
					'queryinheritance' => '\Propel\Generator\Builder\Om\QueryInheritanceBuilder',
					'queryinheritancestub' => '\Propel\Generator\Builder\Om\ExtensionQueryInheritanceBuilder',
					'interface' => '\Propel\Generator\Builder\Om\InterfaceBuilder',
					# SQL builders
					'datasql' => '\Propel\Generator\Builder\Sql\PgsqlDataSQLBuilder',
				],
			],
		],
	],
];
