<?php/* * * * * * SssS_ChatLogonClient.inc * * * * @version 20091030_130502 (CC) Luke JZ aka SwissalpS * * * */class SssS_ChatLogonClient extends SssS_ChatClient {	var $bSave2disk = false; // should we save at all?	var $aLastPHPresults = null;	var $iLogonAttemptCount = 0;	function SssS_ChatLogonClient($oDelegate = null) {		$this->SssS_Plist('', null, false, false, false);		$this->oDelegate = $oDelegate;		$sMyRoomUID = $this->oDelegate->sUIDroom;		$sMyUID = $this->oDelegate->newUIDlogon();		$this->set('uid', ($sMyUID ? 'UnidentifiedLogonClient' . $sMyUID								   : 'UnidentifiedLogonClient'));		$this->set('name', 'Unknown');		$this->set('timestamps/creation', time());		$this->aPermissions = $this->getOrSet('permissions', array($sMyRoomUID => 1));	} // SssS_ChatLogonClient	function dropBox($sMsg) {		return 0;	} // dropBox	function flushHistory($bSave = true) {		return true;	} // flushHistory/*	function isConnected() {		return false;	} // isConnected*/	// don't use this on logon clients especially not when handing resource over to standard client	function logout() {		if (!$this->oDelegate)				return "\n" . 'can\'t logout, have no delegate' . "\n" . '105';		if (!$this->isConnected())				return "\n" . 'can\'t logout, am not connected' . "\n" . '102';		@socket_close($this->rSpawn);		$this->rSpawn = null;		return "\n" . 'disconected logon client ' . $this->get('uid') . "\n";	} // logout	function resourceHandle() {		return $this->rSpawn;	} // resourceHandle	// override default behaviour	function save() {		if ($this->getOrSet('flushHistoryOnExit', true))				$this->flushHistory(false);		// if we can save to disk we do so		if ($this->getOrSet('save2disk', false)) return parent::save();		// otherwise only free up some memory		return $this->freeMemory();		return false;	} // save} // SssS_ChatLogonClient/* * * *\ SssS_ChatLogonClient.inc (CC) Luke JZ aka SwissalpS /* * * */?>